// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id Int @id @default(autoincrement())
  email String @unique
  password String
  name String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  roleId Int?
  role Role? @relation(fields: [roleId], references: [id])
  client Client?
}

model Role {
  id Int @id @default(autoincrement())
  name String @unique
  users User[]
  
  permissions RolePermission[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
model Permission {
  id Int @id @default(autoincrement())
  name String @unique
  roles RolePermission[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model RolePermission {
  id Int @id @default(autoincrement())
  roleId Int
  permissionId Int
  role Role @relation(fields: [roleId], references: [id])
  permission Permission @relation(fields: [permissionId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([roleId, permissionId])
}

model Address {
    id Int @id @default(autoincrement())
    state String
    city String
    street String
    number String
    postal_code String
    description String
    clientId Int?
    client Client? @relation(fields: [clientId], references: [id])
  }

model Client {
    id Int @id @default(autoincrement())
    userId Int? @unique
    user User? @relation(fields: [userId], references: [id])
    phone String
    birth_date String
    rg String
    address Address[]
  }
model Plan {
  id Int @id @default(autoincrement())
  name String @unique
  description String
  status Boolean
  price Decimal @db.Decimal(5,2)
}

model Product {
  id Int @id @default(autoincrement())
  name String
  description String
  price Decimal @db.Decimal(5,2)
  bar_code String
  quantity Int
  image String
  categories CategoryProduct[]
}

model Category {
  id Int @id @default(autoincrement())
  name String @unique
  products CategoryProduct[]
}

model CategoryProduct {
  id Int @id @default(autoincrement())
  productId Int
  categoryId Int
  product Product @relation(fields: [productId], references: [id])
  category Category @relation(fields: [categoryId], references: [id])

  @@unique([productId, categoryId])
}

model Contact{
    id Int @id @default(autoincrement())
    name String
    address String
    phone String
    email String
    description String
    googlemaps String
  }
model Purchase {
    id Int @id @default(autoincrement())
    type String
    client_id  Int
    product_id  Int
    plan_id  Int
    payday  Int
    payment_method  Int
    payment_status Boolean
    start_subscription_date  Int
    end_subscription_date  Int
    canceled Boolean
}
